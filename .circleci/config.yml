version: 2

jobs:
  #
  # linux
  #

  test-3.7: &full-test-template
    docker:
      - image: circleci/python:3.7-stretch

    working_directory: ~/repo/

    steps:
      - checkout

      - restore_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
      - run: python -m virtualenv env
      - run: &install-dependences-template
          name: install requirements
          command: |
            env/bin/pip install -r ./requirements.txt
            env/bin/pip install coverage
      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - env

      - run: env/bin/coverage run -m unittest discover

  test-3.6:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.6-jessie

  test-3.5:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.5-jessie

  test-2.7:
    # Note: CircleCI's Python 2.7 environment already has virtualenv pre-installed.
    #   Hence, even though it's Python 2.7, `python -m virtualenv ..` works.
    <<: *full-test-template
    docker:
      - image: circleci/python:2.7-jessie

  #
  # macOS
  #

  test-osx-3.7: &osx-tests-template
    macos:
      xcode: "10.1.0"
    environment:
      PYTHON: 3.7.0
      HOMEBREW_NO_AUTO_UPDATE: 1

    working_directory: ~/repo

    steps: 
      - checkout

      - run: brew install pyenv

      # Install desired python version
      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}
      - run: pyenv install $PYTHON -s
      - save_cache:
          key: pyenv-{{ .Environment.CIRCLE_JOB }}
          paths:
            - ~/.pyenv

      # Set local python version
      - run: 
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env

      # Restore cache
      - restore_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
      - run: *install-dependences-template
      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - env

      - run: env/bin/coverage run -m unittest discover


  test-osx-3.6:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.6.5
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-osx-3.5:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.5.5
      HOMEBREW_NO_AUTO_UPDATE: 1
      BASH_ENV: /Users/distiller/repo/.circleci/.bashrc_macOS

  test-osx-2.7:
    <<: *osx-tests-template
    environment:
      PYTHON: 2.7.15
      HOMEBREW_NO_AUTO_UPDATE: 1
      BASH_ENV: /Users/distiller/repo/.circleci/.bashrc_macOS


  deploy:
    docker:
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            python -m virtualenv env
            . env/bin/activate
            pip install -r requirements.txt

      - run:
          name: Install twine
          command: |
            . env/bin/activate
            pip install twine

      - run:
          name: Verify version matches tag
          command: |
            . env/bin/activate
            pip install .
            echo $CIRCLE_TAG
            [[ "$(pip show dwave-networkx 2>/dev/null | grep Version)" == "Version: $CIRCLE_TAG" ]]

      - run:
          name: Initialize .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Build sdist and bdist
          command: |
            . env/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel

      - run:
          name: Upload
          command: |
            . env/bin/activate
            twine upload dist/*

workflows:
  version: 2
  tests:
    jobs:
      - test-3.7
      - test-3.6
      - test-3.5
      - test-2.7
      - test-osx-3.7
      - test-osx-3.6
      - test-osx-3.5
      - test-osx-2.7

  deploy:
    jobs:
      - deploy:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
